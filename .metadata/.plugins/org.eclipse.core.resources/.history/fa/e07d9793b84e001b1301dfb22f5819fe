package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.EnseignantChercheur;
import com.example.demo.entities.Etudiant;
import com.example.demo.entities.Membre;
import com.example.demo.service.IMemberService;

//yesta3ml el service f les methodes
@RestController
@CrossOrigin
public class MemberRestController {

	@Autowired
	IMemberService memberService;

	// GET
	@RequestMapping(value = "/membres", method = RequestMethod.GET)
	public List<Membre> findMembres() {
		return memberService.findAll();
	}

	// http://localhost:8090/membre/1
	@GetMapping(value = "/membre/{id}")
	public Membre findOneMemberById(@PathVariable Long id) {
		return memberService.findMember(id);
	}

	// http://localhost:8090/membre/search/cin?cin=12683599
	@GetMapping(value = "/membre/search/cin")

	public Membre findOneMemberByCin(@RequestParam String cin)

	{
		return memberService.findByCin(cin);
	}

	@GetMapping(value = "/membre/search/email")

	public Membre findOneMemberByEmail(@RequestParam String email)

	{
		return memberService.findByEmail(email);
	}

	// POST
	@CrossOrigin
	@PostMapping(value = "/membres/enseignant")
	public Membre addMembre(@RequestBody EnseignantChercheur m)

	{
		return memberService.addMember(m);

	}

	@PostMapping(value = "/membres/etudiant")
	@CrossOrigin
	public Membre addMembre(@RequestBody Etudiant e)

	{
		return memberService.addMember(e);

	}

	// DELETE
	@DeleteMapping(value = "/membres/{id}")

	public void deleteMembre(@PathVariable Long id)

	{
		memberService.deleteMember(id);

	}

	// UPDATE
	@CrossOrigin
	@PutMapping(value = "/membres/etudiant/{id}")
	public Membre updatemembre(@PathVariable Long id, @RequestBody Etudiant p)

	{
		p.setId(id);
		return memberService.updateMember(p);

	}

	@PutMapping(value = "/membres/enseignant/{id}")
	@CrossOrigin
	public Membre updateMembre(@PathVariable Long id, @RequestBody EnseignantChercheur p)

	{

		p.setId(id);
		return memberService.updateMember(p);

	}

	@PutMapping(value = "/membres/etudiant")
	public Membre affecter(@RequestParam Long idetd, @RequestParam Long idens) {
		return memberService.affecterenseignantToetudiant(idetd, idens);
	}

	@GetMapping("/fullmember/{id}")
	public Membre findAFullMember(@PathVariable(name = "id") Long id)

	{

		Membre mbr= memberService.findMember(id);

		mbr.setPubs(memberService.findPublicationsParAuteur(id));
		mbr.setEvents(memberService.findEventsParOrganisateur(id));
		mbr.setOutils(memberService.findOutilParMembre(id));

		return mbr;

	}

}
